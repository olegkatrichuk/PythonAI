"""Final models fix

Revision ID: 79d6de74cede
Revises: 
Create Date: 2025-06-28 20:47:24.661543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '79d6de74cede'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('categories',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    # op.create_table('users',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('email', sa.String(), nullable=True),
    # sa.Column('hashed_password', sa.String(), nullable=True),
    # sa.Column('is_active', sa.Boolean(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # op.create_table('category_translations',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('category_id', sa.Integer(), nullable=False),
    # sa.Column('language_code', sa.String(length=2), nullable=False),
    # sa.Column('name', sa.String(), nullable=True),
    # sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_category_translations_id'), 'category_translations', ['id'], unique=False)
    # op.create_index(op.f('ix_category_translations_name'), 'category_translations', ['name'], unique=True)
    # op.create_table('tools',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('slug', sa.String(), nullable=False),
    # sa.Column('icon_url', sa.String(), nullable=True),
    # sa.Column('rating', sa.Float(), nullable=True),
    # sa.Column('review_count', sa.Integer(), nullable=True),
    # sa.Column('price', sa.Float(), nullable=True),
    # sa.Column('url', sa.String(), nullable=True),
    # sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    # sa.Column('is_featured', sa.Boolean(), nullable=False),
    # sa.Column('category_id', sa.Integer(), nullable=True),
    # sa.Column('owner_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    # sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_tools_id'), 'tools', ['id'], unique=False)
    # op.create_index(op.f('ix_tools_slug'), 'tools', ['slug'], unique=True)
    # op.create_table('comments',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('text', sa.String(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    # sa.Column('tool_id', sa.Integer(), nullable=True),
    # sa.Column('author_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    # sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    # op.create_table('tool_translations',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('tool_id', sa.Integer(), nullable=False),
    # sa.Column('language_code', sa.String(length=2), nullable=False),
    # sa.Column('name', sa.String(), nullable=True),
    # sa.Column('description', sa.String(), nullable=True),
    # sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index(op.f('ix_tool_translations_id'), 'tool_translations', ['id'], unique=False)
    # create index if not exists to avoid duplicate errors
    op.execute(sa.text("CREATE INDEX IF NOT EXISTS ix_tool_translations_name ON tool_translations (name)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tool_translations_name'), table_name='tool_translations')
    op.drop_index(op.f('ix_tool_translations_id'), table_name='tool_translations')
    op.drop_table('tool_translations')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_tools_slug'), table_name='tools')
    op.drop_index(op.f('ix_tools_id'), table_name='tools')
    op.drop_table('tools')
    op.drop_index(op.f('ix_category_translations_name'), table_name='category_translations')
    op.drop_index(op.f('ix_category_translations_id'), table_name='category_translations')
    op.drop_table('category_translations')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
